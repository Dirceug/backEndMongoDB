// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UF {
  AC
  AP
  AM
  BA
  CE
  DF
  ES
  GO
  MA
  MT
  MS
  MG
  PA
  PB
  PR
  PE
  PI
  RJ
  RN
  RS
  RO
  RR
  SC    
  SP
  SE
  TO 
}

model Noticias {
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  titulo          String
  fotoUrl         String ?
  lead            String
  idAPI           Int
  dataPublicacao  DateTime
  // curtidasTotal   Int
  // comentarios     String
  // faforitadaId    String
  // APIURL          String
  // dataPublicacao  DateTime
}

model Observatorios {
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  nome            String
  fotoUrl         String 
  // descricao       String
  // logradouro      String
  // numImovel       String
  // complemento     String?
  bairro          String
  municipio       String
  UF              UF @default(SP)
  telefone        String?
  siteURL         String? 
  // curtidasTotal   Int
  // comentarios     String
  // faforitadaId    String
}

model Lancamentos {
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  missao          String
  logoMissaoURL   String ?
  lead            String
  sucesso         Boolean
  idAPI           Int
  APIURL          String
}

model PublicacaoUsuario {
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  titulo          String
  fotoURL         String?
  idAPI           Int
  curtidasTotal   Int
  comentarios     String
  favoritadaId    String
  ApiURL          String
  dataPublicacao  DateTime
  usuarioId       String[]    @db.ObjectId
  usuarios        Usuario[]   @relation(fields:[usuarioId] , references: [id])   
}

model Usuario {
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  nome            String
  CPF             String      @unique
  dataNascimento  DateTime
  logradouro      String
  numImovel       String
  complemento     String?
  bairro          String
  municipio       String
  UF              UF
  email           String      @unique
  telefone        String?
  pontuacao       Float
  publicacaoId    String[]    @db.ObjectId
  publicacoes     PublicacaoUsuario[] @relation(fields:[publicacaoId] , references: [id])   
}